Getting Started with Development
================================

Working with JavaScript
-----------------------

Introduction
~~~~~~~~~~~~

The Open Library website makes heavy use of jQuery libraries. 

Except ``jquery`` and ``jquery-ui``, all other third-party javascript libraries are combined and included as ``vendor.js``.

All the custom javascripts are combined and includes as ``all.js``.

vendor.js and third party libraries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

All third-party javascripts are added in the `vendor/js`_ directory in the
repository and ``vendor.js`` is generated by combining these javascripts. The
files included in ``vendor.js`` are specified in a shell script ``vendor.jsh``.

To include a new third-party library:

* Add that library in `vendor/js`_ in the repository
* Add an entry in `vendor.jsh`_
* Generate ``vendor.js`` by running ``make`` ::
        
    $ cd static/upstream
    $ make

* Commit vendor.jsh, vendor.js and the library added to the repository

In case you want to test your changes quickly without going through all of
this process, add your javascript to `lazy.js`_ and it gets included in
`all.js`.

.. _vendor/js: http://github.com/openlibrary/openlibrary/tree/master/vendor/js
.. _vendor.jsh: http://github.com/openlibrary/openlibrary/tree/master/static/upstream/js/vendor.jsh
.. _lazy.js: http://openlibrary.org/upstream/js/lazy.js

all.js and custom javascripts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

All the custom javascript files are stored in the openlibrary.org website at
http://openlibrary.org/upstream/js. All these javascript files are combined to
generate ``all.js``.

The order in which these files are included is determined by the sort order of
the names. In general, it is a bad idea to depend on the order of files
loaded.

Working with CSS
----------------

All the stylesheets are in the openlibrary.org website at
http://openlibrary.org/css. All these stylesheets are combined to generate
`all.css`_, which is included in all the web pages.

These files are combined by the order of their name. If you are trying to
overwrite any existing style, it is important to make sure the new file comes
after the original file in the sort order. A better way to specify the order
may be implemented in future.

It is a good idea to break the css into multiple logical files instead of putting it in one monolithic file.

.. _all.css: http://openlibrary.org/css/all.css
