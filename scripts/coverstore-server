#! /usr/bin/env python
"""Run coverstore server.

Usage:

start coverstore using dev webserver:

    ./scripts/coverstore-server coverstore.yml 8080

start coverstore as fastcgi:

    ./scripts/coverstore-server coverstore.yml fastcgi 7070

start coverstore using gunicorn webserver:

    ./scripts/coverstore-server coverstore.yml --gunicorn -b 0.0.0.0:8080

"""

import sys
import os
import _init_path
import web
web.config.debug = False

def setup_env():
    # make sure PYTHON_EGG_CACHE is writable
    os.environ['PYTHON_EGG_CACHE'] = "/tmp/.python-eggs"

    # required when run as fastcgi
    os.environ['REAL_SCRIPT_NAME'] = ""
    
def start_server():
    from openlibrary.coverstore import server
    server.main(*sys.argv[1:])
    
def start_gunicorn_server():
    """Starts the coverstore server using gunicorn server.
    """
    from gunicorn.app.base import Application
    from gunicorn.config import Config
    
    configfile = sys.argv.pop(1)
    
    class WSGIServer(Application):
        def init(self, parser, opts, args):
            pass
            
        def load(self):
            from openlibrary.coverstore import server, code
            server.load_config(configfile)
            return code.app.wsgifunc()
            
    WSGIServer("%prog coverstore.yml --gunicorn [options]").run()
    
if __name__ == "__main__":
    setup_env()
    if "--gunicorn" in sys.argv:
        sys.argv.pop(sys.argv.index("--gunicorn"))        
        start_gunicorn_server()
    else:
        start_server()
