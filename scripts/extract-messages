#! /usr/bin/env python
"""Utility script to extract all translatable messages from templates and 
macros and write to openlibrary/i18n/messages.pot file.
"""

from babel.messages.extract import extract_from_dir, extract_python
from babel.messages.pofile import write_po
from babel.messages import Catalog

import web
import os
import StringIO

METHODS = [
    ("**.py", "python"),
    ("**.html", "__main__:extract_templetor"),
    ("**.js", "javascript")
]
COMMENT_TAGS = ["NOTE:"]

def extract_templetor(fileobj, keywords, comment_tags, options):
    code = web.template.Template.generate_code(fileobj.read(), fileobj.name)
    f = StringIO.StringIO(code)
    f.name = fileobj.name
    x = extract_python(f, keywords, comment_tags, options)
    return x

def main():
    catalog = Catalog(
        project='Open Library',
        copyright_holder='Internet Archive'
    )

    extracted = extract_from_dir('openlibrary/plugins/upstream', METHODS, comment_tags=COMMENT_TAGS, strip_comment_tags=True)
    for filename, lineno, message, comments in extracted:
        catalog.add(message, None, [(filename, lineno)], auto_comments=comments)
    
    path = 'openlibrary/i18n/messages.pot'
    f = open(path, 'w')
    write_po(f, catalog)
    f.close()

    print 'wrote template to', path
    
if __name__ == "__main__":
    main()
